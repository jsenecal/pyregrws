[tool.poetry]
name = "pyregrws"
version = "0.2.0"
description = "Python library to retrieve and modify records within ARIN's database through their Reg-RWS service"
authors = ["Jonathan Senecal <contact@jonathansenecal.com>"]
homepage = "https://github.com/jsenecal/pyregrws"
license = "Apache 2.0"
readme = "README.md"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Internet",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Framework :: Pydantic",
]
packages = [{ include = "regrws" }]


[tool.poetry.dependencies]
python = "^3.11"
requests = "^2.28.1"
pydantic = { extras = ["dotenv"], version = "^1.10.22" }
pydantic-xml = "1.0.0"
certifi = "^2025.0.0"

[tool.poetry.group.dev.dependencies]
pytest-xdist = "^3.7.0"
ipython = "^9.0.0"
pytest = "8.4.1"
xmldiff = "^2.4"
lxml = "^5.0.0"
pytest-cov = "^6.0.0"
responses = "^0.25.0"
ruff = "^0.11.0"

[tool.pytest.ini_options]
filterwarnings = ["ignore::DeprecationWarning:pydantic_xml.*:"]

[tool.black]
line-length = 88
target_version = ['py310', 'py311']

[tool.isort]
profile = "black"

[tool.pylint]
max-line-length = 88

[tool.pyright]
reportGeneralTypeIssues = "information"

[tool.mypy]
plugins = ["pydantic.mypy"]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[build-system]
requires = ["poetry-core>=1.3.2"]
build-backend = "poetry.core.masonry.api"
